#!/usr/bin/env bash

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

source "$SCRIPT_DIR/functions"

# Check if we're in the right directory
# TODO: actually check the directory as well as the devbox.json?
if [ ! -f "devbox.json" ]; then
  print_error "Please run this script from the root of the benefit-decision-toolkit project"
  exit 1
fi

print_status "üîç Checking for existing devbox installation..."

if ! command_exists devbox; then
  print_warning "Devbox not found. Installing devbox..."
  if command_exists curl; then
    curl -fsSL https://get.jetify.com/devbox/install.sh | bash
    print_success "Devbox installed"
  else
    print_error "curl not found. Please install devbox manually: https://www.jetify.com/devbox/docs/contributor-quickstart/"
    exit 1
  fi
else
  print_status "devbox already installed."
fi

bin/ensure-root-env-file

print_status "üîç Checking for existing bin/devbox-init-hook..."
if [ -f "bin/devbox-init-hook.example" ] && [ ! -f "bin/devbox-init-hook" ]; then
  cp "bin/devbox-init-hook.example" "bin/devbox-init-hook"
  chmod +x "bin/devbox-init-hook"
  print_success "‚úì Created bin/devbox-init-hook from example"
elif [ -f "bin/devbox-init-hook" ]; then
  print_status "‚óã bin/devbox-init-hook already exists"
else
  print_error "‚ö† Error: bin/devbox-init-hook.example not found."
  exit 1
fi

print_status "üì¶ Setting up devbox environment..."
if [ -f "devbox.json" ]; then
  devbox install
  print_success "Devbox environment initialized"
else
  print_error "devbox.json not found"
  exit 1
fi
