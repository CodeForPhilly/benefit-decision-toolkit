#!/usr/bin/env bash

# Benefit Decision Toolkit - One-Step Developer Setup Script
# This script streamlines setup of a development environment for the Benefit Decision Toolkit

set -e # Exit on any error

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

source "$SCRIPT_DIR/functions"

print_status "ðŸš€ Starting Benefit Decision Toolkit Developer Setup..."

if [[ "$DEVBOX_SHELL_ENABLED" != "1" ]]; then
  if ask_user "This project is configured to use devbox (https://www.jetify.com/devbox) to manage system dependencies. Do you want to use devbox? (default=yes)" "y"; then
    echo ""
    echo "Devbox instructions:"
    echo ""
    echo "1. If you already have devbox installed, then run:"
    echo "  \$ devbox run setup"
    echo ""
    echo "2. If you don't already have devbox installed (or you're not sure), then run:"
    echo "  \$ bin/install-devbox && devbox run setup"
    echo ""
    exit 0
  else
    print_warning "Setup won't use devbox; system dependencies are the developer's responsibility. See devbox.json for the list of dependencies needed."
    sleep 2
  fi
fi

print_status "ðŸ“¦ Installing frontend dependencies..."

if ! command_exists npm; then
  print_error "npm not found. Please install node manually or use devbox to manage dependencies."
  exit 1
fi

print_status "Installing builder-frontend dependencies..."
cd builder-frontend
if [ -f "package.json" ]; then
  npm install
  print_success "builder-frontend dependencies installed"
else
  print_error "package.json not found in builder-frontend"
  exit 1
fi
cd ..

print_status "Installing screener-frontend dependencies..."
cd screener-frontend
if [ -f "package.json" ]; then
  npm install
  print_success "screener-frontend dependencies installed"
else
  print_error "package.json not found in screener-frontend"
  exit 1
fi
cd ..

print_status "Finished installing frontend dependencies."

print_status "ðŸ“¦ Installing backend dependencies..."

if ! command_exists mvn; then
  print_error "mvn not found. Please install maven manually or use devbox to manage dependendcies."
  exit 1
fi

print_status "Installing library-api dependencies..."
cd library-api
mvn clean package
print_success "library-api dependencies installed"
cd ..

print_status "Installing builder-api dependencies..."
cd builder-api
# TODO: are the tests important to run here? (one of them was failing for me)
mvn clean package -DskipTests
print_success "builder-api dependencies installed"
cd ..

print_status "Installing screener-api dependencies..."
cd screener-api
mvn clean package
print_success "screener-api dependencies installed"
cd ..

print_status "Finished installing backend dependencies."

print_success "ðŸŽ‰ Developer setup completed successfully!"
echo ""
echo "ðŸ“‹ Next Steps:"
echo "1. Ask a teammate to help you setup .env files in builder-frontend and screener-frontend."
echo "2. If using devbox, then:"
echo "  a. Run 'devbox shell' within the project root directory to load dependencies. (https://www.jetify.com/docs/devbox/cli_reference/devbox_shell/)"
echo "  b. Consider using the direnv integration to load dependencies automatically. (https://www.jetify.com/docs/devbox/ide_configuration/direnv/)"
echo "  c. If you use VS Code, then consider installing the Devbox and Direnv extensions."
echo "3. Run the web apps locally using 'npm run dev' from within builder-frontend and screener-frontend directories."
echo "4. Run the library-api application using 'quarkus dev' within the library-api directory."
echo ""
print_status "Happy coding! ðŸš€"
